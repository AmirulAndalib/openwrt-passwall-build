name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  generate_matrix:
    name: Set matrix
    runs-on: ubuntu-latest
    outputs:
      sdks: ${{ steps.out.outputs.sdks }}
    strategy:
      matrix:
        ref:
          - master
          - openwrt-22.03
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: openwrt/openwrt
          ref: ${{ matrix.ref }}

      - name: Set targets
        id: find_targets
        run: |
          REF=${{ matrix.ref }}

          # sdks
          JSON='['
          FIRST=1

          while read -r line;
          do
            ARCH=$(echo "$line" | cut -d " " -f 1)

            [[ $FIRST -ne 1 ]] && JSON="$JSON"','
            FIRST=0

            JSON="$JSON"'{"arch":"'"$ARCH"'","ref":"'"$REF"'"}'
          done <<< $(perl ./scripts/dump-target-info.pl architectures 2>/dev/null)

          JSON="$JSON"']'
          echo -e "\n---- sdks ----\n"
          echo "$JSON"
          echo -e "\n---- sdks ----\n"
          echo "sdks=$JSON" >> "$GITHUB_OUTPUT"

      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.ref }}
          outputs: |-
            sdks: ${{ steps.find_targets.outputs.sdks }}

  gather_matrix:
    name: Gather build matrices
    runs-on: ubuntu-latest
    needs: generate_matrix
    outputs:
      result: ${{ steps.gather.outputs.result }}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: generate_matrix
      - name: Gather matrices
        id: gather
        run: |
          result=$(jq -c '.sdks[]' <<< '${{ steps.read.outputs.result }}' | jq -c -s add)
          # https://github.com/openwrt/packages/issues/19511
          result=$(jq -c '. - [{
            "arch": "mipsel_24kc_24kf",
            "ref": "master"
          }]' <<< ${result})
          echo "result=${result}" >> $GITHUB_OUTPUT

  release:
    name: Build for ${{ matrix.arch }}-${{ matrix.ref }}
    runs-on: ubuntu-latest
    needs: gather_matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.gather_matrix.outputs.result) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve Version
        id: ver
        run: |
          { read luci_ver; read pkgs_ver; read passwall2_ver; } < current_version
          echo "luci=$luci_ver" >> $GITHUB_OUTPUT
          echo "pkgs=$pkgs_ver" >> $GITHUB_OUTPUT
          echo "passwall2=$passwall2_ver" >> $GITHUB_OUTPUT

      - name: Build Package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.ref }}
          EXTRA_FEEDS: >-
            src-git|passwall_packages|https://github.com/xiaorouji/openwrt-passwall^${{ steps.ver.outputs.pkgs }}
            src-git|passwall_luci|https://github.com/xiaorouji/openwrt-passwall^${{ steps.ver.outputs.luci }}
            src-git|passwall2|https://github.com/xiaorouji/openwrt-passwall2^${{ steps.ver.outputs.passwall2 }}
          KEY_BUILD: ${{ secrets.SIGN_PRIV_KEY }}
          V: s

      - name: Tar Output Folder
        run: |
          ref=${{ matrix.ref }}
          if [[ $ref == *"openwrt"* ]]; then
            # openwrt-22.03 -> releases/packages-22.03
            abi=${ref/openwrt/releases\/packages}
          else
            # master -> snapshots/packages
            abi=snapshots/packages
          fi
          DIST_DIR=$PWD/dist/$abi
          mkdir -p $DIST_DIR

          pushd bin/packages
          cp -r --parents */passwall* $DIST_DIR
          popd

          tar -cf dist.tar dist

      - name: Upload Output Folder
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-passwall-${{ matrix.arch }}-${{ matrix.ref }}
          path: dist.tar
          retention-days: 7

  deploy:
    concurrency:
      group: deploy_osdn
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch All Builds
        uses: actions/download-artifact@v3
        with:
          path: all-builds

      - name: Merge All Builds
        run: |
          mkdir dist
          for d in all-builds/openwrt-passwall-*; do
            tar -xf $d/dist.tar -C $d
            rsync -a $d/dist/ dist
          done
          cp passwall.pub dist

      - name: Deploy
        uses: Burnett01/rsync-deployments@5.2.1
        with:
          switches: -avz --delete --exclude-from=archived.txt
          path: dist/
          remote_path: /storage/groups/o/op/openwrt-passwall-build/
          remote_host: storage.osdn.net
          remote_user: ${{ secrets.OSDN_DEPLOY_USER }}
          remote_key: ${{ secrets.OSDN_DEPLOY_KEY }}
