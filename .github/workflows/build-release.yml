name: Build and Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Build for ${{ matrix.target.arch }} ${{ matrix.sdk_version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk_version: ["snapshots", "releases/21.02.0"]
        target:
          - arch: aarch64_cortex-a53
            sdk_target_url_path: bcm27xx/bcm2710
          - arch: aarch64_cortex-a72
            sdk_target_url_path: mvebu/cortexa72
          - arch: aarch64_generic
            sdk_target_url_path: layerscape/armv8_64b
          - arch: arm_arm1176jzf-s_vfp
            sdk_target_url_path: bcm27xx/bcm2708
          - arch: arm_arm926ej-s
            sdk_target_url_path: at91/legacy
          - arch: arm_cortex-a15_neon-vfpv4
            sdk_target_url_path: ipq806x/generic
          - arch: arm_cortex-a5-vfpv4
            sdk_target_url_path: at91/sama5
          - arch: arm_cortex-a7_neon-vfpv4
            sdk_target_url_path: bcm27xx/bcm2709
          - arch: arm_cortex-a8_vfpv3
            sdk_target_url_path: sunxi/cortexa8
          - arch: arm_cortex-a9
            sdk_target_url_path: bcm53xx/generic
          - arch: arm_cortex-a9_neon
            sdk_target_url_path: imx6/generic
          - arch: arm_cortex-a9_vfpv3-d16
            sdk_target_url_path: mvebu/cortexa9
          - arch: arm_fa526
            sdk_target_url_path: gemini/generic
          - arch: arm_mpcore
            sdk_target_url_path: oxnas/ox820
          - arch: arm_xscale
            sdk_target_url_path: kirkwood/generic
          - arch: i386_pentium
            sdk_target_url_path: x86/legacy
          - arch: i386_pentium4
            sdk_target_url_path: x86/generic
          - arch: mips64_octeonplus
            sdk_target_url_path: octeon/generic
          - arch: mipsel_24kc
            sdk_target_url_path: ramips/mt7620
          - arch: mipsel_24kc_24kf
            sdk_target_url_path: pistachio/generic
          - arch: mipsel_74kc
            sdk_target_url_path: bcm47xx/mips74k
          - arch: mipsel_mips32
            sdk_target_url_path: bcm47xx/generic
          - arch: mips_24kc
            sdk_target_url_path: ath79/generic
          - arch: mips_mips32
            sdk_target_url_path: bcm63xx/generic
          - arch: x86_64
            sdk_target_url_path: x86/64
          # - arch: arc_arc700
          #   sdk_target_url_path: arc770/generic
          # - arch: arc_archs
          #   sdk_target_url_path: archs38/generic
          # - arch: armeb_xscale
          #   sdk_target_url_path: ixp4xx/generic
          # - arch: powerpc_464fp
          #   sdk_target_url_path: apm821xx/nand
          # - arch: powerpc_8540
          #   sdk_target_url_path: mpc85xx/generic

    env:
      SDK_VERSION: ${{ matrix.sdk_version }}
      SDK_TARGET_URL_PATH: ${{ matrix.target.sdk_target_url_path }}
      CACHE_DIR: ~/cache
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}:openwrt-passwall-build:${{ matrix.target.arch }}:${{ matrix.sdk_version }}:release:cache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-passwall-build:${{ matrix.target.arch }}:${{ matrix.sdk_version }}:cache:

      - name: Setup CCache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}:openwrt-passwall-build:${{ matrix.target.arch }}:${{ matrix.sdk_version }}:release:ccache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-passwall-build:${{ matrix.target.arch }}:${{ matrix.sdk_version }}:ccache:

      - name: Install Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install -yq gettext libncurses5-dev xsltproc

      - name: Prepare For Build
        run: |
          sdk_home="$(mktemp -d)"

          test -d ~/.ccache || mkdir -p ~/.ccache
          ln -sf ~/.ccache "$sdk_home/.ccache"

          echo "SDK_HOME=$sdk_home" >> $GITHUB_ENV
          echo "CONFIG_CCACHE=y" >> $GITHUB_ENV

      - name: Build package
        env:
          SIGN_PRIV_KEY: ${{ secrets.SIGN_PRIV_KEY }}
        run: ./compile.sh

      - name: Show CCache Status
        run: |
          eval "${{ env.SDK_HOME }}/staging_dir/host/bin/ccache -s"

      - name: Sanitize SDK Version
        id: sanitize-sdk-version
        run: echo "::set-output name=version::$(echo $SDK_VERSION | sed 's/\//-/g')"

      - name: Save Output Folder
        uses: actions/upload-artifact@v2
        with:
          name: openwrt-passwall-${{ matrix.target.arch }}-${{ steps.sanitize-sdk-version.outputs.version }}
          path: dist
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch All Builds
        uses: actions/download-artifact@v2
        with:
          path: all-builds

      - name: Merge All Builds
        run: |
          mkdir dist
          for d in all-builds/*; do
            rsync -a $d/ dist
          done
          cp passwall.pub dist

      - name: Deploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.OSDN_DEPLOY_KEY }}
        with:
          src: 'dist/'
          dest: 'dianlujitao@storage.osdn.net:/storage/groups/o/op/openwrt-passwall-build/'
