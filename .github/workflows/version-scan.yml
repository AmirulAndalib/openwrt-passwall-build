name: Scan openwrt-passwall Version

on:
  schedule:
    - cron: "0 19 * * *" # every day at UTC+8 3:00AM
  workflow_dispatch:

jobs:
  check:
    name: Check Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Checkout Upstream Luci
        uses: actions/checkout@v3
        with:
          repository: xiaorouji/openwrt-passwall
          ref: luci
          path: passwall_luci

      - name: Checkout Upstream Packages
        uses: actions/checkout@v3
        with:
          repository: xiaorouji/openwrt-passwall
          ref: packages
          path: passwall_packages

      - name: Get Latest Version
        id: get_version
        run: |
          echo "::set-output name=version::$(printf "%s-%s" \
            "$(git -C passwall_luci rev-parse HEAD)" \
            "$(git -C passwall_packages rev-parse HEAD)")"

      - name: Compare Version
        id: compare_version
        run: |
          latest_version="${{ steps.get_version.outputs.version }}"
          current_version="$(cat upstream_version 2>/dev/null)" || true

          if [ "$current_version" != "$latest_version" ] ; then
            echo "::set-output name=version::$latest_version"
          else
            echo "::set-output name=version::"
          fi

      - name: Commit New Version
        if: steps.compare_version.outputs.version != ''
        run: |
          version="${{ steps.compare_version.outputs.version }}"
          echo $version > upstream_version
          git add upstream_version

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          IFS=- read luci_ver pkgs_ver <<< $version
          tag_name="${luci_ver:0:7}-${pkgs_ver:0:7}"
          commit_url="xiaorouji/openwrt-passwall@%s"

          git commit -m "chore: bump to ${tag_name}" \
            -m "$(printf "luci: ${commit_url}\npackages: ${commit_url}" ${luci_ver} ${pkgs_ver})"
          git push

          git tag -a "$tag_name" -m "$tag_name"
          git push origin "$tag_name"
